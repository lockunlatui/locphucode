// Lead Qualification Utilities
export interface QualifiedLead {
  id: string;
  timestamp: string;
  source: string;

  // Contact Info
  name: string;
  email: string;
  phone: string;
  company: string;

  // Project Details
  projectType: string;
  budget: string;
  timeline: string;
  urgency: string;

  // Qualification Data
  decisionMaker: string;
  currentSolution: string;
  teamSize: string;
  technicalExpertise: string;
  specificRequirements: string[];
  message: string;

  // Scoring
  leadScore: number;
  leadQuality: "hot" | "warm" | "cold";

  // Metadata
  userAgent: string;
  referrer: string;
  sessionData?: any;
}

export const calculateLeadScore = (
  formData: any
): { score: number; quality: "hot" | "warm" | "cold" } => {
  let score = 0;

  // Budget scoring (40% weight)
  const budgetScores = {
    "over-50m": 40,
    "30-50m": 30,
    "10-30m": 20,
    "under-10m": 10,
    discuss: 15,
  };
  score += budgetScores[formData.budget as keyof typeof budgetScores] || 0;

  // Decision making power (25% weight)
  const decisionScores = {
    yes: 25,
    influence: 15,
    no: 5,
  };
  score +=
    decisionScores[formData.decisionMaker as keyof typeof decisionScores] || 0;

  // Urgency (20% weight)
  const urgencyScores = {
    immediate: 20,
    month: 15,
    quarter: 10,
    research: 2,
  };
  score += urgencyScores[formData.urgency as keyof typeof urgencyScores] || 0;

  // Timeline (10% weight)
  const timelineScores = {
    immediate: 10,
    "1-month": 8,
    "2-3-months": 5,
    flexible: 3,
  };
  score +=
    timelineScores[formData.timeline as keyof typeof timelineScores] || 0;

  // Company/Team size (5% weight)
  if (formData.company?.length > 0) score += 2;
  const teamScores = {
    large: 3,
    medium: 2,
    small: 1,
    individual: 0,
  };
  score += teamScores[formData.teamSize as keyof typeof teamScores] || 0;

  // Determine quality
  const quality = score >= 70 ? "hot" : score >= 40 ? "warm" : "cold";

  return { score, quality };
};

export const getNextActionForLead = (
  leadQuality: string,
  leadScore: number
) => {
  switch (leadQuality) {
    case "hot":
      return {
        action: "immediate_call",
        timeframe: "2 hours",
        priority: "high",
        message: "Li√™n h·ªá ngay l·∫≠p t·ª©c! Lead ch·∫•t l∆∞·ª£ng cao.",
        autoActions: [
          "send_priority_email",
          "schedule_call",
          "notify_sales_team",
        ],
      };

    case "warm":
      return {
        action: "follow_up_call",
        timeframe: "24 hours",
        priority: "medium",
        message: "G·ªçi ƒëi·ªán t∆∞ v·∫•n trong 24h",
        autoActions: ["send_follow_up_email", "add_to_nurture_sequence"],
      };

    default:
      return {
        action: "email_nurture",
        timeframe: "3-7 days",
        priority: "low",
        message: "B·ªï sung th√¥ng tin v√† theo d√µi ƒë·ªãnh k·ª≥",
        autoActions: ["send_educational_content", "add_to_monthly_newsletter"],
      };
  }
};

export const formatLeadForCRM = (formData: any): QualifiedLead => {
  const { score, quality } = calculateLeadScore(formData);

  return {
    id: `lead_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
    timestamp: new Date().toISOString(),
    source: "website_contact_form",

    // Contact info
    name: formData.name,
    email: formData.email,
    phone: formData.phone,
    company: formData.company || "N/A",

    // Project details
    projectType: formData.projectType,
    budget: formData.budget,
    timeline: formData.timeline,
    urgency: formData.urgency,

    // Qualification
    decisionMaker: formData.decisionMaker,
    currentSolution: formData.currentSolution,
    teamSize: formData.teamSize,
    technicalExpertise: formData.technicalExpertise,
    specificRequirements: formData.specificRequirements || [],
    message: formData.message,

    // Scoring
    leadScore: score,
    leadQuality: quality,

    // Metadata
    userAgent: typeof window !== "undefined" ? navigator.userAgent : "N/A",
    referrer: typeof window !== "undefined" ? document.referrer : "N/A",
  };
};

// Lead Storage (temporary - replace with real backend)
export const storeLeadLocally = (lead: QualifiedLead) => {
  if (typeof window === "undefined") return;

  const existingLeads = JSON.parse(
    localStorage.getItem("qualified_leads") || "[]"
  );
  existingLeads.push(lead);
  localStorage.setItem("qualified_leads", JSON.stringify(existingLeads));

  // Also store in sessionStorage for immediate access
  sessionStorage.setItem("latest_lead", JSON.stringify(lead));
};

export const getStoredLeads = (): QualifiedLead[] => {
  if (typeof window === "undefined") return [];
  return JSON.parse(localStorage.getItem("qualified_leads") || "[]");
};

// Email templates based on lead quality
export const getEmailTemplate = (lead: QualifiedLead) => {
  const templates = {
    hot: {
      subject: `üî• [URGENT] B√°o gi√° ${lead.projectType} - ${lead.name}`,
      body: `
K√≠nh ch√†o ${lead.name},

C·∫£m ∆°n b·∫°n ƒë√£ quan t√¢m ƒë·∫øn d·ªãch v·ª• c·ªßa LocDo.Tech!

D·ª± √°n ${lead.projectType} v·ªõi ng√¢n s√°ch ${
        lead.budget
      } c·ªßa b·∫°n r·∫•t ph√π h·ª£p v·ªõi chuy√™n m√¥n c·ªßa ch√∫ng t√¥i.

ƒê·ªÉ t∆∞ v·∫•n chi ti·∫øt v√† ƒë∆∞a ra b√°o gi√° ch√≠nh x√°c nh·∫•t, t√¥i s·∫Ω g·ªçi ƒëi·ªán cho b·∫°n trong 2h t·ªõi.

Th·ªùi gian thu·∫≠n ti·ªán: ${new Date(
        Date.now() + 2 * 60 * 60 * 1000
      ).toLocaleString("vi-VN")}

Tr√¢n tr·ªçng,
Do Xuan Loc - Founder LocDo.Tech
üìû ${lead.phone}
      `,
    },

    warm: {
      subject: `‚≠ê B√°o gi√° ${lead.projectType} - T∆∞ v·∫•n mi·ªÖn ph√≠`,
      body: `
K√≠nh ch√†o ${lead.name},

C·∫£m ∆°n b·∫°n ƒë√£ li√™n h·ªá v·ªõi LocDo.Tech!

Ch√∫ng t√¥i ƒë√£ ghi nh·∫≠n y√™u c·∫ßu ${lead.projectType} c·ªßa b·∫°n v√† s·∫Ω chu·∫©n b·ªã b√°o gi√° chi ti·∫øt.

Team s·∫Ω li√™n h·ªá v·ªõi b·∫°n trong 24h ƒë·ªÉ:
- T∆∞ v·∫•n gi·∫£i ph√°p ph√π h·ª£p nh·∫•t
- B√°o gi√° chi ti·∫øt v√† timeline
- Gi·∫£i ƒë√°p m·ªçi th·∫Øc m·∫Øc

Trong th·ªùi gian ch·ªù ƒë·ª£i, b·∫°n c√≥ th·ªÉ tham kh·∫£o portfolio: https://locdo.tech/portfolio

Tr√¢n tr·ªçng,
LocDo.Tech Team
      `,
    },

    cold: {
      subject: `üìã Th√¥ng tin d·ªãch v·ª• ${lead.projectType}`,
      body: `
K√≠nh ch√†o ${lead.name},

C·∫£m ∆°n b·∫°n ƒë√£ quan t√¢m ƒë·∫øn LocDo.Tech!

Ch√∫ng t√¥i ƒë√£ ghi nh·∫≠n y√™u c·∫ßu c·ªßa b·∫°n v√† s·∫Ω g·ª≠i th√¥ng tin chi ti·∫øt qua email n√†y.

ƒê·ªÉ hi·ªÉu r√µ h∆°n v·ªÅ nhu c·∫ßu, team s·∫Ω li√™n h·ªá v·ªõi b·∫°n trong v√≤ng 3-5 ng√†y l√†m vi·ªác.

B·∫°n c≈©ng c√≥ th·ªÉ tham kh·∫£o:
- Blog k·ªπ thu·∫≠t: https://locdo.tech/blog
- Case studies: https://locdo.tech/portfolio

Tr√¢n tr·ªçng,
LocDo.Tech Team
      `,
    },
  };

  return templates[lead.leadQuality];
};
